@model IEnumerable<BBGFrontEnd.Models.Boardgame>

@{
    ViewBag.Title = "Boardgames";
}

@helper Truncate(string value, int maxLength)
{
    if (value.Length > maxLength)
    {
        value = value.Substring(0, maxLength) + "...";
    }

    @value;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "Boardgames", FormMethod.Get))
{
    <div class="row">
        <div class="col-xs-6 col-md-4 search-input">
            <div class="search-input-label">
                <label for="query">Keyword</label>
            </div>
            <div class="search-input-body">
                @Html.TextBox("query", null, null, new { @class = "form-control" })
            </div>
        </div>

        <div class="col-xs-6 col-md-4 search-input">
            <div class="search-input-label">
                <label for="players">Number of Players</label>
            </div>
            <div class="search-input-body">
                @Html.DropDownList("players", null, "Players", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-xs-6 col-md-4 search-input">
            <div class="search-input-label">
                <label for="category">Category</label>
            </div>
            <div class="search-input-body">
                @Html.DropDownList("category", null, "Category", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-xs-6 col-md-4 search-input">
            <div class="search-input-label">
                <label for="age">Age</label>
            </div>
            <div class="search-input-body">
                @Html.DropDownList("age", null, "Age", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-xs-6 col-md-4 search-input">
            <div class="search-input-label">
                <label for="playtime">Play Time</label>
            </div>
            <div class="search-input-body">
                @Html.DropDownList("playtime", null, "Playtime", new { @class = "form-control" })
            </div>
        </div>

        <div class="col-xs-6 col-md-4 search-input text-center">
            <input type="submit" class="btn btn-dark-blue btn-wide" value="Search" />

            <div class="checkbox">
                <label class="form-check-label" for="exact">
                    @Html.CheckBox("exact", false, new { @class = "form-check-input" })
                    Exact search
                </label>
            </div>
        </div>
    </div>
}

<p>@Model.Count() results</p>

<div class="row" style="display:flex;flex-wrap:wrap;margin-top:30px;">
    @foreach (var item in Model)
    {
        <div class="col-sm-6 col-md-4" style="padding-bottom:30px;">
            <div class="card" style="height:100%;">
                <img class="card-img-top card-image-300px" src="@Html.DisplayFor(modelItem => item.ThumbnailURL)" alt="@item.Name">

                <div class="card-body">
                    <h4 class="card-title"> @Html.DisplayFor(modelItem => item.Name)</h4>
                    <p class="label label-default"> @Html.DisplayFor(modelItem => item.Category)</p>
                    <p class="card-text" style="margin-top:0.75rem;">
                        @Truncate(WebUtility.HtmlDecode(item.Description), 300)
                    </p>

                    <div class="card-details">
                        <div>
                            <span class="glyphicon glyphicon-user"></span>
                            @Html.DisplayFor(modelItem => item.MinPlayers) - @Html.DisplayFor(modelItem => item.MaxPlayers)
                        </div>
                        <div>
                            <span class="glyphicon glyphicon-time"></span>
                            @Html.DisplayFor(modelItem => item.MinPlayTime) - @Html.DisplayFor(modelItem => item.MaxPlayTime)
                        </div>
                        <div>
                            <span class="glyphicon glyphicon-education"></span>
                            @Html.DisplayFor(modelItem => item.MinAge)+
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
